# Project Euler Archive Practice
# https://projecteuler.net/problem=2

# Problem 2 - Even Fibonacci Numbers
# SOLVED & VERIFIED VIA PROJECT EULER

# Each new term in the Fibonacci sequence is generated by adding the 
# previous two terms. By starting with 1 and 2, the first 10 terms will be:

# 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

# By considering the terms in the Fibonacci sequence whose values do not 
# exceed four million, find the sum of the even-valued terms

def evenFibonacci():

    fib = [0,1] # Initiate fibonacci list
    even = [] # Create blank list to store even numbers from fib list
    n1 = 0  # Set variable to store first number
    n2 = 1  # Set variable to store second number
    n3 = 0  # Set variable to store sum of first and second number

    while (n1 + n2) < 4000000: # Loops through fibonacci sequence up to 4 million

        n3 = n1 + n2    # Get next number in sequence
        n1, n2 = n2, n3 # Sets the next two numbers to calculate
        
        fib.append(n3) # Appends the next number to fibonacci sequence list

    for x in fib:   # Loops through all elements in fibonacci sequence list

        if x % 2 == 0: # Checks for even numbers
            even.append(x)  # Appends each to even numbers list
    
    return print(sum(even))   # Sums all of the even numbers in the even numbers list

evenFibonacci() # Call function